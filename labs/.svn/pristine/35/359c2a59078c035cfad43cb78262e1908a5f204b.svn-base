
#周雪振 5141509091


# Execution begins at adderss 0
        .pos 0
        irmovq stack, %rsp
        irmovq src, %rdi
        irmovq dest, %rsi
        irmovq $0x3, %rdx
        call copy_block
        halt

        .align 8
# Source block 
src: 
        .quad 0x00a 
        .quad 0x0b0 
        .quad 0xc00
# Destination block 
dest: 
        .quad 0x111 
        .quad 0x222 
        .quad 0x333

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
        xorq %rax, %rax
        irmovq $0x8, %r8
        irmovq $0x1, %r9
        jmp test
loop:
        mrmovq (%rdi), %rcx
        addq %r8, %rdi
        rmmovq %rcx, (%rsi)
        addq %r8, %rsi
        xorq %rcx, %rax
        subq %r9, %rdx
test:
        andq %rdx, %rdx
        jg loop
        ret

# Stack starts here and grows to lower addersses
        .pos 0x300
stack:

